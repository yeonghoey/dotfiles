;; -*- mode: emacs-lisp -*-

(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-distribution 'spacemacs
   dotspacemacs-enable-lazy-installation 'unused
   dotspacemacs-ask-for-lazy-installation t
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-configuration-layers
   '(auto-completion
     better-defaults
     command-log
     csv
     docker
     emacs-lisp
     fasd
     git
     helm
     html
     imenu-list
     javascript
     (markdown :variables markdown-live-preview-engine 'vmd)
     (org :variables org-enable-github-support t)
     (python :variables python-test-runner 'pytest)
     (ranger :variables ranger-show-preview t)
     scala
     (shell :variables
            shell-default-shell 'eshell
            shell-default-height 30
            shell-default-position 'bottom)
     shell-scripts
     spell-checking
     syntax-checking
     version-control
     yaml
     )
   dotspacemacs-additional-packages '()
   dotspacemacs-frozen-packages '()
   dotspacemacs-excluded-packages '(exec-path-from-shell)
   dotspacemacs-install-packages 'used-only))

(defun dotspacemacs/init ()
  (setq-default
   dotspacemacs-elpa-https t
   dotspacemacs-elpa-timeout 5
   dotspacemacs-check-for-update nil
   dotspacemacs-elpa-subdirectory nil
   dotspacemacs-editing-style 'vim
   dotspacemacs-verbose-loading nil
   dotspacemacs-startup-banner 'official
   dotspacemacs-startup-lists '()
   dotspacemacs-startup-buffer-responsive t
   dotspacemacs-scratch-mode 'text-mode
   dotspacemacs-themes '(underwater
                         leuven
                         spacemacs-dark
                         spacemacs-light
                         zenburn
                         leuven
                         monokai
                         sanityinc-solarized-dark
                         sanityinc-solarized-light
                         )
   dotspacemacs-colorize-cursor-according-to-state nil
   dotspacemacs-default-font '("NanumGothicCoding"
                               :size 16
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   dotspacemacs-leader-key "SPC"
   dotspacemacs-emacs-command-key "SPC"
   dotspacemacs-ex-command-key ":"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   dotspacemacs-distinguish-gui-tab nil
   dotspacemacs-remap-Y-to-y$ nil
   dotspacemacs-retain-visual-state-on-shift t
   dotspacemacs-visual-line-move-text nil
   dotspacemacs-ex-substitute-global nil
   dotspacemacs-default-layout-name "Default"
   dotspacemacs-display-default-layout nil
   dotspacemacs-auto-resume-layouts nil
   dotspacemacs-large-file-size 1
   dotspacemacs-auto-save-file-location 'cache
   dotspacemacs-max-rollback-slots 5
   dotspacemacs-helm-resize nil
   dotspacemacs-helm-no-header nil
   dotspacemacs-helm-position 'bottom
   dotspacemacs-helm-use-fuzzy 'always
   dotspacemacs-enable-paste-transient-state nil
   dotspacemacs-which-key-delay 0.4
   dotspacemacs-which-key-position 'bottom
   dotspacemacs-loading-progress-bar t
   dotspacemacs-fullscreen-at-startup nil
   dotspacemacs-fullscreen-use-non-native nil
   dotspacemacs-maximized-at-startup nil
   dotspacemacs-active-transparency 90
   dotspacemacs-inactive-transparency 90
   dotspacemacs-show-transient-state-title t
   dotspacemacs-show-transient-state-color-guide t
   dotspacemacs-mode-line-unicode-symbols nil
   dotspacemacs-smooth-scrolling t
   dotspacemacs-line-numbers nil
   dotspacemacs-folding-method 'evil
   dotspacemacs-smartparens-strict-mode nil
   dotspacemacs-smart-closing-parenthesis nil
   dotspacemacs-highlight-delimiters 'all
   dotspacemacs-persistent-server nil
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   dotspacemacs-default-package-repository nil
   dotspacemacs-whitespace-cleanup nil
   ))

(defun dotspacemacs/user-init ()
  (setq-default git-magit-status-fullscreen t)
  )

(defun dotspacemacs/user-config ()
  ;; Indentations
  (setq-default sh-indentation 2)
  (setq-default js-indent-level 2)
  (setq-default js2-basic-offset 2)

  ;; Org
  (setq org-directory "~/Dropbox/org")
  (setq org-agenda-files '("~/Dropbox/org"))
  (setq org-capture-templates `(
   ("c" "Create notes"
    entry (file ,(format-time-string "%Y-%m-%d.org"))
    "* TODO %?"
    :empty-lines 1)

   ("e" "Create notes with example"
    entry (file ,(format-time-string "%Y-%m-%d.org"))
    "* TODO %?\n%a\n#+BEGIN_EXAMPLE\n%i\n#+END_EXAMPLE\n"
    :empty-lines 1)

   ("s" "Create notes with source"
    entry (file ,(format-time-string "%Y-%m-%d.org"))
    "* TODO %?\n%a\n#+BEGIN_SRC %^{Language}\n%i \n#+END_SRC\n"
    :empty-lines 1)
   ))

  (setq-default org-startup-indented t)
  (setq-default org-startup-folded nil)
  (setq-default org-download-method 'directory)
  (setq-default org-download-image-dir "./img")
  (setq-default org-download-annotate-function (lambda (x) nil))
  (setq-default org-download-screenshot-method
                "ln -sfF \"$(ls -t $HOME/screenshots/* | head -n 1)\" %s")
  ;; Toggles
  (spacemacs/toggle-smartparens-globally-off)

  ;; Disable ungainly line wrapping related indicators
  (setq-default fringe-indicator-alist
                (assq-delete-all 'continuation
                (assq-delete-all 'truncation
                  fringe-indicator-alist)))

  ;; Others
  (setq-default magit-diff-refine-hunk 'all)
  (setq-default ensime-startup-snapshot-notification nil)
  (setq-default default-input-method "korean-hangul")
  )
